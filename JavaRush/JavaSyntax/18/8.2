//Solution.java
package com.javarush.task.pro.task17.task1715;

import java.util.ArrayList;
import java.util.List;

/* 
Вилларибо и Виллабаджо.
*/

public class Solution {
    static List<MusicalInstrument> orchestra = new ArrayList<>();

    public static void main(String[] args) {
        createKeyboardOrchestra();
        createStringedOrchestra();
        playOrchestra();
    }

    public static void createKeyboardOrchestra() {
        //напишите тут ваш код
        orchestra.add(new Organ());
        orchestra.add(new Piano());
        orchestra.add(new Piano());
        orchestra.add(new Piano());
    }

    public static void createStringedOrchestra() {
        //напишите тут ваш код
        orchestra.add(new Violin());
        orchestra.add(new Violin());
        orchestra.add(new Guitar());
    }

    public static void playOrchestra() {
        //напишите тут ваш код
        for (MusicalInstrument ins:orchestra)
            ins.play();
    }
}
//Guitar.java
package com.javarush.task.pro.task17.task1715;

public class Guitar implements MusicalInstrument {
    @Override
    public void play() {
        System.out.println("Играет гитара.");
    }
}
//MusicalInstrument.java
package com.javarush.task.pro.task17.task1715;

public interface MusicalInstrument {
    void play();
}
//Organ.java
package com.javarush.task.pro.task17.task1715;

public class Organ implements MusicalInstrument {
    @Override
    public void play() {
        System.out.println("Играет орган.");
    }
}
//Piano.java
package com.javarush.task.pro.task17.task1715;

public class Piano implements MusicalInstrument {
    @Override
    public void play() {
        System.out.println("Играет пианино.");
    }
}
//Violin.java
package com.javarush.task.pro.task17.task1715;

public class Violin implements MusicalInstrument {
    @Override
    public void play() {
        System.out.println("Играет скрипка.");
    }
}
